{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_Database\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]); // mannual approch to fetch data by creating arrrat\n  // const dummyMovies = [\n  //   {\n  //  id: 1,\n  // title: 'Some Dummy Movie',\n  //   openingText: 'This is the opening text of the movie',\n  //  releaseDate: '2021-05-18',\n  // },\n  // {\n  //  id: 2,\n  //  title: 'Some Dummy Movie 2',\n  //  openingText: 'This is the second opening text of the movie',\n  //  releaseDate: '2021-05-19',\n  // },\n  // ];\n  // using fetch method to get data from swapi to shwoing the list\n\n  function fetchMovieHandler() {\n    fetch('https://swapi.dev/api/films').then(response => {\n      return response.json();\n    }).then(data => {\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingtext: movieData.opening_crawl,\n          releaseData: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","fetchMovieHandler","fetch","then","response","json","data","transformedMovies","results","map","movieData","id","episode_id","title","openingtext","opening_crawl","releaseData","release_date"],"sources":["D:/React_Database/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n\n  // mannual approch to fetch data by creating arrrat\n // const dummyMovies = [\n //   {\n    //  id: 1,\n     // title: 'Some Dummy Movie',\n   //   openingText: 'This is the opening text of the movie',\n    //  releaseDate: '2021-05-18',\n   // },\n   // {\n    //  id: 2,\n    //  title: 'Some Dummy Movie 2',\n    //  openingText: 'This is the second opening text of the movie',\n    //  releaseDate: '2021-05-19',\n   // },\n // ];\n \n\n \n // using fetch method to get data from swapi to shwoing the list\n\n function fetchMovieHandler(){\n  fetch('https://swapi.dev/api/films').then(response =>{\n     return response.json()\n  }).then((data) => {\n    const transformedMovies = data.results.map(movieData =>{\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingtext: movieData.opening_crawl,\n        releaseData: movieData.release_date\n      }\n    })\n    setMovies(transformedMovies);\n  });\n }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={movies} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAGA,SAASC,GAAT,GAAe;EACb,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC,CADa,CAIb;EACD;EACA;EACG;EACC;EACF;EACC;EACD;EACA;EACC;EACA;EACA;EACA;EACD;EACF;EAIA;;EAEA,SAASK,iBAAT,GAA4B;IAC3BC,KAAK,CAAC,6BAAD,CAAL,CAAqCC,IAArC,CAA0CC,QAAQ,IAAG;MAClD,OAAOA,QAAQ,CAACC,IAAT,EAAP;IACF,CAFD,EAEGF,IAFH,CAESG,IAAD,IAAU;MAChB,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiBC,SAAS,IAAG;QACrD,OAAO;UACLC,EAAE,EAAED,SAAS,CAACE,UADT;UAELC,KAAK,EAAEH,SAAS,CAACG,KAFZ;UAGLC,WAAW,EAAEJ,SAAS,CAACK,aAHlB;UAILC,WAAW,EAAEN,SAAS,CAACO;QAJlB,CAAP;MAMD,CAPyB,CAA1B;MAQAjB,SAAS,CAACO,iBAAD,CAAT;IACD,CAZD;EAaA;;EAEA,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAEN,iBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,UAAD;IAAY,MAAM,EAAEF,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAJF,CADF;AAUD;;AAED,eAAeD,GAAf"},"metadata":{},"sourceType":"module"}